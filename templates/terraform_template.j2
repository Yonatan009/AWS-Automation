provider "aws" {
    region = "us-east-2"
}

data "aws_vpc" "selected" {
    id = "vpc-0a4391f7ca5f503f4"
}

data "aws_subnet" "public_subnet_a" {
    id = "subnet-0cf27d84bd5ea1d32"
}

data "aws_subnet" "public_subnet_b" {
    id = "subnet-0be93675c1bde4170"
}

data "aws_internet_gateway" "existing_igw" {
    filter {
        name   = "attachment.vpc-id"
        values = [data.aws_vpc.selected.id]
    }
}

resource "aws_security_group" "website_sg" {
    name        = "website_sg"
    description = "Allow HTTP"
    vpc_id      = data.aws_vpc.selected.id

    ingress {
        from_port   = 80
        to_port     = 80
        protocol    = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
    }

    egress {
        from_port   = 0
        to_port     = 0
        protocol    = "-1"
        cidr_blocks = ["0.0.0.0/0"]
    }
}

resource "aws_route_table" "rt" {
    vpc_id = data.aws_vpc.selected.id
    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = data.aws_internet_gateway.existing_igw.id
    }
}

# Associate Route Table to Subnet A
resource "aws_route_table_association" "rt_assoc_a" {
    subnet_id      = data.aws_subnet.public_subnet_a.id
    route_table_id = aws_route_table.rt.id
}

# Associate Route Table to Subnet B
resource "aws_route_table_association" "rt_assoc_b" {
    subnet_id      = data.aws_subnet.public_subnet_b.id
    route_table_id = aws_route_table.rt.id
}

resource "aws_lb_target_group" "web_tg" {
    name     = "web-tg"
    port     = 80
    protocol = "HTTP"
    vpc_id   = data.aws_vpc.selected.id
}
resource "aws_lb" "alb" {
    name               = "my-alb"
    load_balancer_type = "application"
    security_groups    = [aws_security_group.website_sg.id]
    subnets = [
        data.aws_subnet.public_subnet_a.id,
        data.aws_subnet.public_subnet_b.id
]
}

resource "aws_lb_listener" "alb_listener" {
    load_balancer_arn = aws_lb.alb.arn
    port              = 80
    protocol          = "HTTP"

    default_action {
        type             = "forward"
        target_group_arn = aws_lb_target_group.web_tg.arn
    }
}

resource "aws_instance" "web_server" {
    ami                    = "ami-0eb9d6fc9fab44d24"
    instance_type          = "t2.micro"
    subnet_id              = data.aws_subnet.public_subnet_a.id
    vpc_security_group_ids = [aws_security_group.website_sg.id]
    associate_public_ip_address = true
    user_data = <<-EOF
                #!/bin/bash
                yum update -y
                yum install -y httpd
                systemctl start httpd
                systemctl enable httpd
                echo "<h1>Hello from Yonatan's Web Server!</h1>" > /var/www/html/index.html
                EOF
    tags = {
        Name = "WebServer"
    }
}

resource "aws_lb_target_group_attachment" "attach_web" {
    target_group_arn = aws_lb_target_group.web_tg.arn
    target_id        = aws_instance.web_server.id
    port             = 80
}

output "instance_id" {
    value = aws_instance.web_server.id
}

output "instance_public_ip" {
    value = aws_instance.web_server.public_ip
}

output "alb_dns" {
    value = aws_lb.alb.dns_name
}
